### YamlMime:ManagedReference
items:
- uid: NPCEngine.API.Classification
  commentId: T:NPCEngine.API.Classification
  id: Classification
  parent: NPCEngine.API
  children:
  - NPCEngine.API.Classification.Classify(System.String,List{System.String},Action{List{List{System.Single}}},Action{NPCEngine.NPCEngineException})
  langs:
  - csharp
  - vb
  name: Classification
  nameWithType: Classification
  fullName: NPCEngine.API.Classification
  type: Class
  source:
    id: Classification
    path: ''
    startLine: 440
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  summary: "\nClassification services RPC Interface.\n"
  example: []
  syntax:
    content: 'public class Classification : RPCBase'
    content.vb: >-
      Public Class Classification
          Inherits RPCBase
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NPCEngine.API.Classification.Classify(System.String,List{System.String},Action{List{List{System.Single}}},Action{NPCEngine.NPCEngineException})
  commentId: M:NPCEngine.API.Classification.Classify(System.String,List{System.String},Action{List{List{System.Single}}},Action{NPCEngine.NPCEngineException})
  id: Classify(System.String,List{System.String},Action{List{List{System.Single}}},Action{NPCEngine.NPCEngineException})
  parent: NPCEngine.API.Classification
  langs:
  - csharp
  - vb
  name: Classify(String, List<String>, Action<List<List<Single>>>, Action<NPCEngineException>)
  nameWithType: Classification.Classify(String, List<String>, Action<List<List<Single>>>, Action<NPCEngineException>)
  fullName: NPCEngine.API.Classification.Classify(System.String, List<System.String>, Action<List<List<System.Single>>>, Action<NPCEngine.NPCEngineException>)
  type: Method
  source:
    id: Classify
    path: ''
    startLine: 456
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public IEnumerator Classify(string query, List<string> context, Action<List<List<float>>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
    parameters:
    - id: query
      type: System.String
    - id: context
      type: Global.List{System.String}
    - id: outputCallback
      type: Global.Action{List{List{System.Single}}}
    - id: errorCallback
      type: Global.Action{NPCEngine.NPCEngineException}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function Classify(query As String, context As List(Of String), outputCallback As Action(Of List(Of List(Of Single))) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
  overload: NPCEngine.API.Classification.Classify*
  nameWithType.vb: Classification.Classify(String, List(Of String), Action(Of List(Of List(Of Single))), Action(Of NPCEngineException))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NPCEngine.API.Classification.Classify(System.String, List(Of System.String), Action(Of List(Of List(Of System.Single))), Action(Of NPCEngine.NPCEngineException))
  name.vb: Classify(String, List(Of String), Action(Of List(Of List(Of Single))), Action(Of NPCEngineException))
references:
- uid: NPCEngine.API
  commentId: N:NPCEngine.API
  name: NPCEngine.API
  nameWithType: NPCEngine.API
  fullName: NPCEngine.API
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NPCEngine.API.Classification.Classify*
  commentId: Overload:NPCEngine.API.Classification.Classify
  name: Classify
  nameWithType: Classification.Classify
  fullName: NPCEngine.API.Classification.Classify
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.List{System.String}
  commentId: '!:Global.List{System.String}'
  definition: Global.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action{List{List{System.Single}}}
  commentId: '!:Global.Action{List{List{System.Single}}}'
  definition: Global.Action`1
  name: Action<List<List<Single>>>
  nameWithType: Action<List<List<Single>>>
  fullName: Action<List<List<System.Single>>>
  nameWithType.vb: Action(Of List(Of List(Of Single)))
  fullName.vb: Action(Of List(Of List(Of System.Single)))
  name.vb: Action(Of List(Of List(Of Single)))
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action{NPCEngine.NPCEngineException}
  commentId: '!:Global.Action{NPCEngine.NPCEngineException}'
  definition: Global.Action`1
  name: Action<NPCEngineException>
  nameWithType: Action<NPCEngineException>
  fullName: Action<NPCEngine.NPCEngineException>
  nameWithType.vb: Action(Of NPCEngineException)
  fullName.vb: Action(Of NPCEngine.NPCEngineException)
  name.vb: Action(Of NPCEngineException)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NPCEngine.NPCEngineException
    name: NPCEngineException
    nameWithType: NPCEngineException
    fullName: NPCEngine.NPCEngineException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NPCEngine.NPCEngineException
    name: NPCEngineException
    nameWithType: NPCEngineException
    fullName: NPCEngine.NPCEngineException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
