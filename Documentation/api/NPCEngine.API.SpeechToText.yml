### YamlMime:ManagedReference
items:
- uid: NPCEngine.API.SpeechToText
  commentId: T:NPCEngine.API.SpeechToText
  id: SpeechToText
  parent: NPCEngine.API
  children:
  - NPCEngine.API.SpeechToText.GetDevices(Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  - NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  - NPCEngine.API.SpeechToText.Listen(System.String,Action{System.String},Action{NPCEngine.NPCEngineException})
  - NPCEngine.API.SpeechToText.SetDevice(System.Int32,Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  - NPCEngine.API.SpeechToText.Transcribe(System.Collections.Generic.List{System.Single},Action{System.String},Action{NPCEngine.NPCEngineException})
  langs:
  - csharp
  - vb
  name: SpeechToText
  nameWithType: SpeechToText
  fullName: NPCEngine.API.SpeechToText
  type: Class
  source:
    id: SpeechToText
    path: ''
    startLine: 1048
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  summary: "\nStatic class <code>SpeechToText</code> provides remote procedure calls \nto inference engine&apos;s speech to text module.\n"
  example: []
  syntax:
    content: 'public class SpeechToText : RPCBase'
    content.vb: >-
      Public Class SpeechToText

          Inherits RPCBase
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NPCEngine.API.SpeechToText.Listen(System.String,Action{System.String},Action{NPCEngine.NPCEngineException})
  commentId: M:NPCEngine.API.SpeechToText.Listen(System.String,Action{System.String},Action{NPCEngine.NPCEngineException})
  id: Listen(System.String,Action{System.String},Action{NPCEngine.NPCEngineException})
  parent: NPCEngine.API.SpeechToText
  langs:
  - csharp
  - vb
  name: Listen(String, Action<String>, Action<NPCEngineException>)
  nameWithType: SpeechToText.Listen(String, Action<String>, Action<NPCEngineException>)
  fullName: NPCEngine.API.SpeechToText.Listen(System.String, Action<System.String>, Action<NPCEngine.NPCEngineException>)
  type: Method
  source:
    id: Listen
    path: ''
    startLine: 1059
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public IEnumerator Listen(string context, Action<string> outputCallback = null, Action<NPCEngineException> errorCallback = null)
    parameters:
    - id: context
      type: System.String
    - id: outputCallback
      type: Global.Action{System.String}
    - id: errorCallback
      type: Global.Action{NPCEngine.NPCEngineException}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function Listen(context As String, outputCallback As Action(Of String) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
  overload: NPCEngine.API.SpeechToText.Listen*
  nameWithType.vb: SpeechToText.Listen(String, Action(Of String), Action(Of NPCEngineException))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NPCEngine.API.SpeechToText.Listen(System.String, Action(Of System.String), Action(Of NPCEngine.NPCEngineException))
  name.vb: Listen(String, Action(Of String), Action(Of NPCEngineException))
- uid: NPCEngine.API.SpeechToText.Transcribe(System.Collections.Generic.List{System.Single},Action{System.String},Action{NPCEngine.NPCEngineException})
  commentId: M:NPCEngine.API.SpeechToText.Transcribe(System.Collections.Generic.List{System.Single},Action{System.String},Action{NPCEngine.NPCEngineException})
  id: Transcribe(System.Collections.Generic.List{System.Single},Action{System.String},Action{NPCEngine.NPCEngineException})
  parent: NPCEngine.API.SpeechToText
  langs:
  - csharp
  - vb
  name: Transcribe(List<Single>, Action<String>, Action<NPCEngineException>)
  nameWithType: SpeechToText.Transcribe(List<Single>, Action<String>, Action<NPCEngineException>)
  fullName: NPCEngine.API.SpeechToText.Transcribe(System.Collections.Generic.List<System.Single>, Action<System.String>, Action<NPCEngine.NPCEngineException>)
  type: Method
  source:
    id: Transcribe
    path: ''
    startLine: 1064
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public IEnumerator Transcribe(List<float> audio, Action<string> outputCallback = null, Action<NPCEngineException> errorCallback = null)
    parameters:
    - id: audio
      type: System.Collections.Generic.List{System.Single}
    - id: outputCallback
      type: Global.Action{System.String}
    - id: errorCallback
      type: Global.Action{NPCEngine.NPCEngineException}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function Transcribe(audio As List(Of Single), outputCallback As Action(Of String) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
  overload: NPCEngine.API.SpeechToText.Transcribe*
  nameWithType.vb: SpeechToText.Transcribe(List(Of Single), Action(Of String), Action(Of NPCEngineException))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NPCEngine.API.SpeechToText.Transcribe(System.Collections.Generic.List(Of System.Single), Action(Of System.String), Action(Of NPCEngine.NPCEngineException))
  name.vb: Transcribe(List(Of Single), Action(Of String), Action(Of NPCEngineException))
- uid: NPCEngine.API.SpeechToText.GetDevices(Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  commentId: M:NPCEngine.API.SpeechToText.GetDevices(Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  id: GetDevices(Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  parent: NPCEngine.API.SpeechToText
  langs:
  - csharp
  - vb
  name: GetDevices(Action<List<String>>, Action<NPCEngineException>)
  nameWithType: SpeechToText.GetDevices(Action<List<String>>, Action<NPCEngineException>)
  fullName: NPCEngine.API.SpeechToText.GetDevices(Action<System.Collections.Generic.List<System.String>>, Action<NPCEngine.NPCEngineException>)
  type: Method
  source:
    id: GetDevices
    path: ''
    startLine: 1069
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public IEnumerator GetDevices(Action<List<string>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
    parameters:
    - id: outputCallback
      type: Global.Action{System.Collections.Generic.List{System.String}}
    - id: errorCallback
      type: Global.Action{NPCEngine.NPCEngineException}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function GetDevices(outputCallback As Action(Of List(Of String)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
  overload: NPCEngine.API.SpeechToText.GetDevices*
  nameWithType.vb: SpeechToText.GetDevices(Action(Of List(Of String)), Action(Of NPCEngineException))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NPCEngine.API.SpeechToText.GetDevices(Action(Of System.Collections.Generic.List(Of System.String)), Action(Of NPCEngine.NPCEngineException))
  name.vb: GetDevices(Action(Of List(Of String)), Action(Of NPCEngineException))
- uid: NPCEngine.API.SpeechToText.SetDevice(System.Int32,Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  commentId: M:NPCEngine.API.SpeechToText.SetDevice(System.Int32,Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  id: SetDevice(System.Int32,Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  parent: NPCEngine.API.SpeechToText
  langs:
  - csharp
  - vb
  name: SetDevice(Int32, Action<List<String>>, Action<NPCEngineException>)
  nameWithType: SpeechToText.SetDevice(Int32, Action<List<String>>, Action<NPCEngineException>)
  fullName: NPCEngine.API.SpeechToText.SetDevice(System.Int32, Action<System.Collections.Generic.List<System.String>>, Action<NPCEngine.NPCEngineException>)
  type: Method
  source:
    id: SetDevice
    path: ''
    startLine: 1074
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public IEnumerator SetDevice(int deviceId, Action<List<string>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
    parameters:
    - id: deviceId
      type: System.Int32
    - id: outputCallback
      type: Global.Action{System.Collections.Generic.List{System.String}}
    - id: errorCallback
      type: Global.Action{NPCEngine.NPCEngineException}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function SetDevice(deviceId As Integer, outputCallback As Action(Of List(Of String)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
  overload: NPCEngine.API.SpeechToText.SetDevice*
  nameWithType.vb: SpeechToText.SetDevice(Int32, Action(Of List(Of String)), Action(Of NPCEngineException))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NPCEngine.API.SpeechToText.SetDevice(System.Int32, Action(Of System.Collections.Generic.List(Of System.String)), Action(Of NPCEngine.NPCEngineException))
  name.vb: SetDevice(Int32, Action(Of List(Of String)), Action(Of NPCEngineException))
- uid: NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  commentId: M:NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  id: InitializeMicrophoneInput(Action{System.Collections.Generic.List{System.String}},Action{NPCEngine.NPCEngineException})
  parent: NPCEngine.API.SpeechToText
  langs:
  - csharp
  - vb
  name: InitializeMicrophoneInput(Action<List<String>>, Action<NPCEngineException>)
  nameWithType: SpeechToText.InitializeMicrophoneInput(Action<List<String>>, Action<NPCEngineException>)
  fullName: NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action<System.Collections.Generic.List<System.String>>, Action<NPCEngine.NPCEngineException>)
  type: Method
  source:
    id: InitializeMicrophoneInput
    path: ''
    startLine: 1079
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public IEnumerator InitializeMicrophoneInput(Action<List<string>> outputCallback = null, Action<NPCEngineException> errorCallback = null)
    parameters:
    - id: outputCallback
      type: Global.Action{System.Collections.Generic.List{System.String}}
    - id: errorCallback
      type: Global.Action{NPCEngine.NPCEngineException}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function InitializeMicrophoneInput(outputCallback As Action(Of List(Of String)) = Nothing, errorCallback As Action(Of NPCEngineException) = Nothing) As IEnumerator
  overload: NPCEngine.API.SpeechToText.InitializeMicrophoneInput*
  nameWithType.vb: SpeechToText.InitializeMicrophoneInput(Action(Of List(Of String)), Action(Of NPCEngineException))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NPCEngine.API.SpeechToText.InitializeMicrophoneInput(Action(Of System.Collections.Generic.List(Of System.String)), Action(Of NPCEngine.NPCEngineException))
  name.vb: InitializeMicrophoneInput(Action(Of List(Of String)), Action(Of NPCEngineException))
references:
- uid: NPCEngine.API
  commentId: N:NPCEngine.API
  name: NPCEngine.API
  nameWithType: NPCEngine.API
  fullName: NPCEngine.API
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NPCEngine.API.SpeechToText.Listen*
  commentId: Overload:NPCEngine.API.SpeechToText.Listen
  name: Listen
  nameWithType: SpeechToText.Listen
  fullName: NPCEngine.API.SpeechToText.Listen
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.Action{System.String}
  commentId: '!:Global.Action{System.String}'
  definition: Global.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action{NPCEngine.NPCEngineException}
  commentId: '!:Global.Action{NPCEngine.NPCEngineException}'
  definition: Global.Action`1
  name: Action<NPCEngineException>
  nameWithType: Action<NPCEngineException>
  fullName: Action<NPCEngine.NPCEngineException>
  nameWithType.vb: Action(Of NPCEngineException)
  fullName.vb: Action(Of NPCEngine.NPCEngineException)
  name.vb: Action(Of NPCEngineException)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NPCEngine.NPCEngineException
    name: NPCEngineException
    nameWithType: NPCEngineException
    fullName: NPCEngine.NPCEngineException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NPCEngine.NPCEngineException
    name: NPCEngineException
    nameWithType: NPCEngineException
    fullName: NPCEngine.NPCEngineException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NPCEngine.API.SpeechToText.Transcribe*
  commentId: Overload:NPCEngine.API.SpeechToText.Transcribe
  name: Transcribe
  nameWithType: SpeechToText.Transcribe
  fullName: NPCEngine.API.SpeechToText.Transcribe
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Single>
  nameWithType: List<Single>
  fullName: System.Collections.Generic.List<System.Single>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of System.Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: NPCEngine.API.SpeechToText.GetDevices*
  commentId: Overload:NPCEngine.API.SpeechToText.GetDevices
  name: GetDevices
  nameWithType: SpeechToText.GetDevices
  fullName: NPCEngine.API.SpeechToText.GetDevices
- uid: Global.Action{System.Collections.Generic.List{System.String}}
  commentId: '!:Global.Action{System.Collections.Generic.List{System.String}}'
  definition: Global.Action`1
  name: Action<List<String>>
  nameWithType: Action<List<String>>
  fullName: Action<System.Collections.Generic.List<System.String>>
  nameWithType.vb: Action(Of List(Of String))
  fullName.vb: Action(Of System.Collections.Generic.List(Of System.String))
  name.vb: Action(Of List(Of String))
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NPCEngine.API.SpeechToText.SetDevice*
  commentId: Overload:NPCEngine.API.SpeechToText.SetDevice
  name: SetDevice
  nameWithType: SpeechToText.SetDevice
  fullName: NPCEngine.API.SpeechToText.SetDevice
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NPCEngine.API.SpeechToText.InitializeMicrophoneInput*
  commentId: Overload:NPCEngine.API.SpeechToText.InitializeMicrophoneInput
  name: InitializeMicrophoneInput
  nameWithType: SpeechToText.InitializeMicrophoneInput
  fullName: NPCEngine.API.SpeechToText.InitializeMicrophoneInput
