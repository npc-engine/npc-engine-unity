### YamlMime:ManagedReference
items:
- uid: NPCEngine.API.TextToSpeech
  commentId: T:NPCEngine.API.TextToSpeech
  id: TextToSpeech
  parent: NPCEngine.API
  children:
  - NPCEngine.API.TextToSpeech.GetNextResult(System.Action{System.Collections.Generic.List{System.Single}})
  - NPCEngine.API.TextToSpeech.GetNextResultFuture
  - NPCEngine.API.TextToSpeech.GetSpeakerIdsFuture
  - NPCEngine.API.TextToSpeech.StartTTS(System.String,System.String,System.Int32,System.Action)
  - NPCEngine.API.TextToSpeech.StartTTSFuture(System.String,System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: TextToSpeech
  nameWithType: TextToSpeech
  fullName: NPCEngine.API.TextToSpeech
  type: Class
  source:
    id: TextToSpeech
    path: ''
    startLine: 1067
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  summary: "\nStatic class <code>TextToSpeech</code> provides remote procedure calls \nto inference engine&apos;s text to speech module.\n"
  example: []
  syntax:
    content: 'public class TextToSpeech : RPCBase'
    content.vb: >-
      Public Class TextToSpeech
          Inherits RPCBase
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NPCEngine.API.TextToSpeech.StartTTSFuture(System.String,System.String,System.Int32)
  commentId: M:NPCEngine.API.TextToSpeech.StartTTSFuture(System.String,System.String,System.Int32)
  id: StartTTSFuture(System.String,System.String,System.Int32)
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: StartTTSFuture(String, String, Int32)
  nameWithType: TextToSpeech.StartTTSFuture(String, String, Int32)
  fullName: NPCEngine.API.TextToSpeech.StartTTSFuture(System.String, System.String, System.Int32)
  type: Method
  source:
    id: StartTTSFuture
    path: ''
    startLine: 1087
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public void StartTTSFuture(string speaker_id, string text, int n_chunks = 1)
    parameters:
    - id: speaker_id
      type: System.String
    - id: text
      type: System.String
    - id: n_chunks
      type: System.Int32
    content.vb: Public Sub StartTTSFuture(speaker_id As String, text As String, n_chunks As Integer = 1)
  overload: NPCEngine.API.TextToSpeech.StartTTSFuture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NPCEngine.API.TextToSpeech.GetSpeakerIdsFuture
  commentId: M:NPCEngine.API.TextToSpeech.GetSpeakerIdsFuture
  id: GetSpeakerIdsFuture
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: GetSpeakerIdsFuture()
  nameWithType: TextToSpeech.GetSpeakerIdsFuture()
  fullName: NPCEngine.API.TextToSpeech.GetSpeakerIdsFuture()
  type: Method
  source:
    id: GetSpeakerIdsFuture
    path: ''
    startLine: 1098
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public ResultFuture<List<string>> GetSpeakerIdsFuture()
    return:
      type: NPCEngine.ResultFuture{System.Collections.Generic.List{System.String}}
    content.vb: Public Function GetSpeakerIdsFuture As ResultFuture(Of List(Of String))
  overload: NPCEngine.API.TextToSpeech.GetSpeakerIdsFuture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NPCEngine.API.TextToSpeech.GetNextResultFuture
  commentId: M:NPCEngine.API.TextToSpeech.GetNextResultFuture
  id: GetNextResultFuture
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: GetNextResultFuture()
  nameWithType: TextToSpeech.GetNextResultFuture()
  fullName: NPCEngine.API.TextToSpeech.GetNextResultFuture()
  type: Method
  source:
    id: GetNextResultFuture
    path: ''
    startLine: 1103
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public ResultFuture<List<float>> GetNextResultFuture()
    return:
      type: NPCEngine.ResultFuture{System.Collections.Generic.List{System.Single}}
    content.vb: Public Function GetNextResultFuture As ResultFuture(Of List(Of Single))
  overload: NPCEngine.API.TextToSpeech.GetNextResultFuture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NPCEngine.API.TextToSpeech.StartTTS(System.String,System.String,System.Int32,System.Action)
  commentId: M:NPCEngine.API.TextToSpeech.StartTTS(System.String,System.String,System.Int32,System.Action)
  id: StartTTS(System.String,System.String,System.Int32,System.Action)
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: StartTTS(String, String, Int32, Action)
  nameWithType: TextToSpeech.StartTTS(String, String, Int32, Action)
  fullName: NPCEngine.API.TextToSpeech.StartTTS(System.String, System.String, System.Int32, System.Action)
  type: Method
  source:
    id: StartTTS
    path: ''
    startLine: 1109
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public IEnumerator StartTTS(string voiceId, string line, int n_chunks, Action outputCallback)
    parameters:
    - id: voiceId
      type: System.String
    - id: line
      type: System.String
    - id: n_chunks
      type: System.Int32
    - id: outputCallback
      type: System.Action
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function StartTTS(voiceId As String, line As String, n_chunks As Integer, outputCallback As Action) As IEnumerator
  overload: NPCEngine.API.TextToSpeech.StartTTS*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NPCEngine.API.TextToSpeech.GetNextResult(System.Action{System.Collections.Generic.List{System.Single}})
  commentId: M:NPCEngine.API.TextToSpeech.GetNextResult(System.Action{System.Collections.Generic.List{System.Single}})
  id: GetNextResult(System.Action{System.Collections.Generic.List{System.Single}})
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: GetNextResult(Action<List<Single>>)
  nameWithType: TextToSpeech.GetNextResult(Action<List<Single>>)
  fullName: NPCEngine.API.TextToSpeech.GetNextResult(System.Action<System.Collections.Generic.List<System.Single>>)
  type: Method
  source:
    id: GetNextResult
    path: ''
    startLine: 1122
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public IEnumerator GetNextResult(Action<List<float>> outputCallback)
    parameters:
    - id: outputCallback
      type: System.Action{System.Collections.Generic.List{System.Single}}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function GetNextResult(outputCallback As Action(Of List(Of Single))) As IEnumerator
  overload: NPCEngine.API.TextToSpeech.GetNextResult*
  nameWithType.vb: TextToSpeech.GetNextResult(Action(Of List(Of Single)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NPCEngine.API.TextToSpeech.GetNextResult(System.Action(Of System.Collections.Generic.List(Of System.Single)))
  name.vb: GetNextResult(Action(Of List(Of Single)))
references:
- uid: NPCEngine.API
  commentId: N:NPCEngine.API
  name: NPCEngine.API
  nameWithType: NPCEngine.API
  fullName: NPCEngine.API
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NPCEngine.API.TextToSpeech.StartTTSFuture*
  commentId: Overload:NPCEngine.API.TextToSpeech.StartTTSFuture
  name: StartTTSFuture
  nameWithType: TextToSpeech.StartTTSFuture
  fullName: NPCEngine.API.TextToSpeech.StartTTSFuture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NPCEngine.API.TextToSpeech.GetSpeakerIdsFuture*
  commentId: Overload:NPCEngine.API.TextToSpeech.GetSpeakerIdsFuture
  name: GetSpeakerIdsFuture
  nameWithType: TextToSpeech.GetSpeakerIdsFuture
  fullName: NPCEngine.API.TextToSpeech.GetSpeakerIdsFuture
- uid: NPCEngine.ResultFuture{System.Collections.Generic.List{System.String}}
  commentId: T:NPCEngine.ResultFuture{System.Collections.Generic.List{System.String}}
  parent: NPCEngine
  definition: NPCEngine.ResultFuture`1
  name: ResultFuture<List<String>>
  nameWithType: ResultFuture<List<String>>
  fullName: NPCEngine.ResultFuture<System.Collections.Generic.List<System.String>>
  nameWithType.vb: ResultFuture(Of List(Of String))
  fullName.vb: NPCEngine.ResultFuture(Of System.Collections.Generic.List(Of System.String))
  name.vb: ResultFuture(Of List(Of String))
  spec.csharp:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NPCEngine.ResultFuture`1
  commentId: T:NPCEngine.ResultFuture`1
  name: ResultFuture<ReturnType>
  nameWithType: ResultFuture<ReturnType>
  fullName: NPCEngine.ResultFuture<ReturnType>
  nameWithType.vb: ResultFuture(Of ReturnType)
  fullName.vb: NPCEngine.ResultFuture(Of ReturnType)
  name.vb: ResultFuture(Of ReturnType)
  spec.csharp:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: <
    nameWithType: <
    fullName: <
  - name: ReturnType
    nameWithType: ReturnType
    fullName: ReturnType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ReturnType
    nameWithType: ReturnType
    fullName: ReturnType
  - name: )
    nameWithType: )
    fullName: )
- uid: NPCEngine
  commentId: N:NPCEngine
  name: NPCEngine
  nameWithType: NPCEngine
  fullName: NPCEngine
- uid: NPCEngine.API.TextToSpeech.GetNextResultFuture*
  commentId: Overload:NPCEngine.API.TextToSpeech.GetNextResultFuture
  name: GetNextResultFuture
  nameWithType: TextToSpeech.GetNextResultFuture
  fullName: NPCEngine.API.TextToSpeech.GetNextResultFuture
- uid: NPCEngine.ResultFuture{System.Collections.Generic.List{System.Single}}
  commentId: T:NPCEngine.ResultFuture{System.Collections.Generic.List{System.Single}}
  parent: NPCEngine
  definition: NPCEngine.ResultFuture`1
  name: ResultFuture<List<Single>>
  nameWithType: ResultFuture<List<Single>>
  fullName: NPCEngine.ResultFuture<System.Collections.Generic.List<System.Single>>
  nameWithType.vb: ResultFuture(Of List(Of Single))
  fullName.vb: NPCEngine.ResultFuture(Of System.Collections.Generic.List(Of System.Single))
  name.vb: ResultFuture(Of List(Of Single))
  spec.csharp:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NPCEngine.API.TextToSpeech.StartTTS*
  commentId: Overload:NPCEngine.API.TextToSpeech.StartTTS
  name: StartTTS
  nameWithType: TextToSpeech.StartTTS
  fullName: NPCEngine.API.TextToSpeech.StartTTS
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NPCEngine.API.TextToSpeech.GetNextResult*
  commentId: Overload:NPCEngine.API.TextToSpeech.GetNextResult
  name: GetNextResult
  nameWithType: TextToSpeech.GetNextResult
  fullName: NPCEngine.API.TextToSpeech.GetNextResult
- uid: System.Action{System.Collections.Generic.List{System.Single}}
  commentId: T:System.Action{System.Collections.Generic.List{System.Single}}
  parent: System
  definition: System.Action`1
  name: Action<List<Single>>
  nameWithType: Action<List<Single>>
  fullName: System.Action<System.Collections.Generic.List<System.Single>>
  nameWithType.vb: Action(Of List(Of Single))
  fullName.vb: System.Action(Of System.Collections.Generic.List(Of System.Single))
  name.vb: Action(Of List(Of Single))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
