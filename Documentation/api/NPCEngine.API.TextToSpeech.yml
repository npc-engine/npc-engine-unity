### YamlMime:ManagedReference
items:
- uid: NPCEngine.API.TextToSpeech
  commentId: T:NPCEngine.API.TextToSpeech
  id: TextToSpeech
  parent: NPCEngine.API
  children:
  - NPCEngine.API.TextToSpeech.GetNextResult
  - NPCEngine.API.TextToSpeech.GetNextResultCoroutine(Action{System.Collections.Generic.List{System.Single}})
  - NPCEngine.API.TextToSpeech.GetSpeakerIds
  - NPCEngine.API.TextToSpeech.StartTTS(System.String,System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: TextToSpeech
  nameWithType: TextToSpeech
  fullName: NPCEngine.API.TextToSpeech
  type: Class
  source:
    id: TextToSpeech
    path: ''
    startLine: 733
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  summary: "\nStatic class <code>TextToSpeech</code> provides remote procedure calls \nto inference engine&apos;s text to speech module.\n"
  example: []
  syntax:
    content: public static class TextToSpeech
    content.vb: Public Module TextToSpeech
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NPCEngine.API.TextToSpeech.StartTTS(System.String,System.String,System.Int32)
  commentId: M:NPCEngine.API.TextToSpeech.StartTTS(System.String,System.String,System.Int32)
  id: StartTTS(System.String,System.String,System.Int32)
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: StartTTS(String, String, Int32)
  nameWithType: TextToSpeech.StartTTS(String, String, Int32)
  fullName: NPCEngine.API.TextToSpeech.StartTTS(System.String, System.String, System.Int32)
  type: Method
  source:
    id: StartTTS
    path: ''
    startLine: 743
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public static void StartTTS(string voiceId, string line, int n_chunks)
    parameters:
    - id: voiceId
      type: System.String
    - id: line
      type: System.String
    - id: n_chunks
      type: System.Int32
    content.vb: Public Shared Sub StartTTS(voiceId As String, line As String, n_chunks As Integer)
  overload: NPCEngine.API.TextToSpeech.StartTTS*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NPCEngine.API.TextToSpeech.GetSpeakerIds
  commentId: M:NPCEngine.API.TextToSpeech.GetSpeakerIds
  id: GetSpeakerIds
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: GetSpeakerIds()
  nameWithType: TextToSpeech.GetSpeakerIds()
  fullName: NPCEngine.API.TextToSpeech.GetSpeakerIds()
  type: Method
  source:
    id: GetSpeakerIds
    path: ''
    startLine: 749
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public static ResultFuture<List<string>> GetSpeakerIds()
    return:
      type: NPCEngine.ResultFuture{System.Collections.Generic.List{System.String}}
    content.vb: Public Shared Function GetSpeakerIds As ResultFuture(Of List(Of String))
  overload: NPCEngine.API.TextToSpeech.GetSpeakerIds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NPCEngine.API.TextToSpeech.GetNextResult
  commentId: M:NPCEngine.API.TextToSpeech.GetNextResult
  id: GetNextResult
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: GetNextResult()
  nameWithType: TextToSpeech.GetNextResult()
  fullName: NPCEngine.API.TextToSpeech.GetNextResult()
  type: Method
  source:
    id: GetNextResult
    path: ''
    startLine: 754
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public static ResultFuture<List<float>> GetNextResult()
    return:
      type: NPCEngine.ResultFuture{System.Collections.Generic.List{System.Single}}
    content.vb: Public Shared Function GetNextResult As ResultFuture(Of List(Of Single))
  overload: NPCEngine.API.TextToSpeech.GetNextResult*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NPCEngine.API.TextToSpeech.GetNextResultCoroutine(Action{System.Collections.Generic.List{System.Single}})
  commentId: M:NPCEngine.API.TextToSpeech.GetNextResultCoroutine(Action{System.Collections.Generic.List{System.Single}})
  id: GetNextResultCoroutine(Action{System.Collections.Generic.List{System.Single}})
  parent: NPCEngine.API.TextToSpeech
  langs:
  - csharp
  - vb
  name: GetNextResultCoroutine(Action<List<Single>>)
  nameWithType: TextToSpeech.GetNextResultCoroutine(Action<List<Single>>)
  fullName: NPCEngine.API.TextToSpeech.GetNextResultCoroutine(Action<System.Collections.Generic.List<System.Single>>)
  type: Method
  source:
    id: GetNextResultCoroutine
    path: ''
    startLine: 760
  assemblies:
  - cs.temp.dll
  namespace: NPCEngine.API
  syntax:
    content: public static IEnumerator GetNextResultCoroutine(Action<List<float>> outputCallback)
    parameters:
    - id: outputCallback
      type: Global.Action{System.Collections.Generic.List{System.Single}}
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Shared Function GetNextResultCoroutine(outputCallback As Action(Of List(Of Single))) As IEnumerator
  overload: NPCEngine.API.TextToSpeech.GetNextResultCoroutine*
  nameWithType.vb: TextToSpeech.GetNextResultCoroutine(Action(Of List(Of Single)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NPCEngine.API.TextToSpeech.GetNextResultCoroutine(Action(Of System.Collections.Generic.List(Of System.Single)))
  name.vb: GetNextResultCoroutine(Action(Of List(Of Single)))
references:
- uid: NPCEngine.API
  commentId: N:NPCEngine.API
  name: NPCEngine.API
  nameWithType: NPCEngine.API
  fullName: NPCEngine.API
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NPCEngine.API.TextToSpeech.StartTTS*
  commentId: Overload:NPCEngine.API.TextToSpeech.StartTTS
  name: StartTTS
  nameWithType: TextToSpeech.StartTTS
  fullName: NPCEngine.API.TextToSpeech.StartTTS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NPCEngine.API.TextToSpeech.GetSpeakerIds*
  commentId: Overload:NPCEngine.API.TextToSpeech.GetSpeakerIds
  name: GetSpeakerIds
  nameWithType: TextToSpeech.GetSpeakerIds
  fullName: NPCEngine.API.TextToSpeech.GetSpeakerIds
- uid: NPCEngine.ResultFuture{System.Collections.Generic.List{System.String}}
  commentId: T:NPCEngine.ResultFuture{System.Collections.Generic.List{System.String}}
  parent: NPCEngine
  definition: NPCEngine.ResultFuture`1
  name: ResultFuture<List<String>>
  nameWithType: ResultFuture<List<String>>
  fullName: NPCEngine.ResultFuture<System.Collections.Generic.List<System.String>>
  nameWithType.vb: ResultFuture(Of List(Of String))
  fullName.vb: NPCEngine.ResultFuture(Of System.Collections.Generic.List(Of System.String))
  name.vb: ResultFuture(Of List(Of String))
  spec.csharp:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NPCEngine.ResultFuture`1
  commentId: T:NPCEngine.ResultFuture`1
  name: ResultFuture<ReturnType>
  nameWithType: ResultFuture<ReturnType>
  fullName: NPCEngine.ResultFuture<ReturnType>
  nameWithType.vb: ResultFuture(Of ReturnType)
  fullName.vb: NPCEngine.ResultFuture(Of ReturnType)
  name.vb: ResultFuture(Of ReturnType)
  spec.csharp:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: <
    nameWithType: <
    fullName: <
  - name: ReturnType
    nameWithType: ReturnType
    fullName: ReturnType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ReturnType
    nameWithType: ReturnType
    fullName: ReturnType
  - name: )
    nameWithType: )
    fullName: )
- uid: NPCEngine
  commentId: N:NPCEngine
  name: NPCEngine
  nameWithType: NPCEngine
  fullName: NPCEngine
- uid: NPCEngine.API.TextToSpeech.GetNextResult*
  commentId: Overload:NPCEngine.API.TextToSpeech.GetNextResult
  name: GetNextResult
  nameWithType: TextToSpeech.GetNextResult
  fullName: NPCEngine.API.TextToSpeech.GetNextResult
- uid: NPCEngine.ResultFuture{System.Collections.Generic.List{System.Single}}
  commentId: T:NPCEngine.ResultFuture{System.Collections.Generic.List{System.Single}}
  parent: NPCEngine
  definition: NPCEngine.ResultFuture`1
  name: ResultFuture<List<Single>>
  nameWithType: ResultFuture<List<Single>>
  fullName: NPCEngine.ResultFuture<System.Collections.Generic.List<System.Single>>
  nameWithType.vb: ResultFuture(Of List(Of Single))
  fullName.vb: NPCEngine.ResultFuture(Of System.Collections.Generic.List(Of System.Single))
  name.vb: ResultFuture(Of List(Of Single))
  spec.csharp:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NPCEngine.ResultFuture`1
    name: ResultFuture
    nameWithType: ResultFuture
    fullName: NPCEngine.ResultFuture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NPCEngine.API.TextToSpeech.GetNextResultCoroutine*
  commentId: Overload:NPCEngine.API.TextToSpeech.GetNextResultCoroutine
  name: GetNextResultCoroutine
  nameWithType: TextToSpeech.GetNextResultCoroutine
  fullName: NPCEngine.API.TextToSpeech.GetNextResultCoroutine
- uid: Global.Action{System.Collections.Generic.List{System.Single}}
  commentId: '!:Global.Action{System.Collections.Generic.List{System.Single}}'
  definition: Global.Action`1
  name: Action<List<Single>>
  nameWithType: Action<List<Single>>
  fullName: Action<System.Collections.Generic.List<System.Single>>
  nameWithType.vb: Action(Of List(Of Single))
  fullName.vb: Action(Of System.Collections.Generic.List(Of System.Single))
  name.vb: Action(Of List(Of Single))
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
